name: Build L.I.S.A MDBook

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: latest
      INSTALL_CLEAN: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache mdBook and plugin binaries
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ env.MDBOOK_VERSION }}
          restore-keys: |
            ${{ runner.os }}-cargo-bin-

      - name: Install Rust toolchain and mdBook plugins
        run: |
          if ! command -v rustup >/dev/null; then
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          fi
          source $HOME/.cargo/env
          if ! command -v mdbook >/dev/null || ! mdbook --version | grep -q "${MDBOOK_VERSION}"; then
            cargo install --force --version ${MDBOOK_VERSION} mdbook
          fi
          for plugin in mdbook-mermaid mdbook-toc mdbook-open-on-gh mdbook-admonish; do
            if ! command -v $plugin >/dev/null; then
              cargo install $plugin
            fi
          done

      - name: Setup mdBook theme, config, and plugins
        run: |
          mkdir -p theme
          # Expanded interactivity (scroll to top, toggle sidebar, etc)
          echo 'window.addEventListener("DOMContentLoaded", () => {
            document.querySelectorAll("table").forEach(table => {
              table.style.overflowX = "auto";
              table.style.display = "block";
            });
            const fab = document.createElement("button");
            fab.textContent = "â†‘";
            fab.style.position = "fixed";
            fab.style.bottom = "2rem";
            fab.style.right = "2rem";
            fab.style.padding = "1rem";
            fab.style.fontSize = "1.5rem";
            fab.style.borderRadius = "50%";
            fab.style.boxShadow = "0 4px 8px rgba(0,0,0,0.2)";
            fab.style.zIndex = "9999";
            fab.style.border = "none";
            fab.style.background = "#007acc";
            fab.style.color = "white";
            fab.style.cursor = "pointer";
            fab.style.transition = "opacity 0.3s ease-in-out";
            fab.title = "Scroll to Top";
            fab.addEventListener("click", () => window.scrollTo({top: 0, behavior: "smooth"}));
            document.body.appendChild(fab);

            // Sidebar toggle for even more interactivity!
            const toggleSidebarBtn = document.createElement("button");
            toggleSidebarBtn.textContent = "â˜°";
            toggleSidebarBtn.style.position = "fixed";
            toggleSidebarBtn.style.top = "1rem";
            toggleSidebarBtn.style.left = "1rem";
            toggleSidebarBtn.style.zIndex = "10000";
            toggleSidebarBtn.style.background = "#007acc";
            toggleSidebarBtn.style.color = "#fff";
            toggleSidebarBtn.style.border = "none";
            toggleSidebarBtn.style.padding = "0.5rem 1rem";
            toggleSidebarBtn.style.fontSize = "1.5rem";
            toggleSidebarBtn.style.borderRadius = "10px";
            toggleSidebarBtn.style.boxShadow = "0 4px 8px rgba(0,0,0,0.1)";
            toggleSidebarBtn.style.cursor = "pointer";
            toggleSidebarBtn.title = "Toggle Sidebar";
            toggleSidebarBtn.onclick = () => {
              document.body.classList.toggle("sidebar-hidden");
            };
            document.body.appendChild(toggleSidebarBtn);
          });' > theme/custom.js

          echo 'html { scroll-behavior: smooth; }
          nav { touch-action: pan-y; }
          body { transition: background 0.3s, color 0.3s; }
          button:hover { filter: brightness(1.15); }
          .sidebar-hidden .sidebar {
            display: none !important;
          }
          .sidebar-hidden .content {
            margin-left: 0 !important;
            width: 100vw !important;
          }
          .admonition { border-left: 6px solid #007acc; margin: 1em 0; padding: 1em; background: #f8fafc;}
          .admonition-title { font-weight: bold; }' > theme/custom.css

          cat > book.toml << TOML
          [book]
          title = "L.I.S.A. Guide"
          authors = ["Into-The-Grey"]
          description = "A supercharged, interactive, local AI assistant documentation."
          multilingual = false

          [output.html]
          default-theme = "light"
          additional-js = ["theme/custom.js"]
          additional-css = ["theme/custom.css"]
          git-repository-url = "https://github.com/Into-The-Grey/Project-L.I.S.A-Guide"
          mathjax-support = true

          [preprocessor.toc]
          [preprocessor.mermaid]
          [preprocessor.open-on-gh]
          [preprocessor.admonish]
          TOML

      - name: Build mdBook, generate PDF & ZIP
        run: |
          source $HOME/.cargo/env
          mdbook build
          sudo apt-get update && sudo apt-get install -y chromium-browser
          mkdir -p /home/runner/snap/chromium/common/.cache
          touch /home/runner/snap/chromium/common/.cache/desktop-runtime-date
          chromium-browser --headless --disable-gpu --no-sandbox --disable-dev-shm-usage --print-to-pdf=book.pdf book/index.html
          cd book && zip -r ../book.zip . && cd ..

      - name: Generate changelog, summary, and README
        run: |
          git fetch --prune --unshallow || true
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          NEW_TAG="v$(date +'%Y.%m.%d.%H%M%S')"
          if [ -z "$LAST_TAG" ]; then
            git log --pretty=format:"%h,%an,%s,%cd" --date=short > CHANGELOG.csv
          else
            git log $LAST_TAG..HEAD --pretty=format:"%h,%an,%s,%cd" --date=short > CHANGELOG.csv
          fi
          echo "# Summary" > src/SUMMARY.md
          echo "- [Introduction](README.md)" >> src/SUMMARY.md
          echo "- [Changelog](changelog.md)" >> src/SUMMARY.md
          echo "| Commit | Author | Message | Date |" > src/changelog.md
          echo "|--------|--------|---------|------|" >> src/changelog.md
          cat CHANGELOG.csv | while IFS=',' read -r hash author subject date; do
            echo "| [$hash](https://github.com/Into-The-Grey/Project-L.I.S.A-Guide/commit/$hash) | $author | $subject | $date |" >> src/changelog.md
          done
          echo "" > src/README.md
          echo "# Project Documentation" >> src/README.md
          echo "" >> src/README.md
          echo "This is the autogenerated documentation site for **Into-The-Grey/Project-L.I.S.A-Guide**." >> src/README.md
          echo "" >> src/README.md
          echo "- ðŸ“˜ Built using **mdBook** ${MDBOOK_VERSION}" >> src/README.md
          echo "- ðŸ•’ Version: $NEW_TAG" >> src/README.md
          echo "- ðŸ”— View online: [GitHub Pages](https://Into-The-Grey.github.io/Project-L.I.S.A-Guide)" >> src/README.md
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add src/changelog.md src/SUMMARY.md src/README.md CHANGELOG.csv theme/* book.toml
          git commit -m "chore: update changelog, summary, README, and interactivity theme"
          git tag $NEW_TAG
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin $NEW_TAG
          git push origin main

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book

      - name: Upload PDF version
        uses: actions/upload-artifact@v4
        with:
          name: book-pdf
          path: book.pdf

      - name: Upload ZIP version
        uses: actions/upload-artifact@v4
        with:
          name: book-zip
          path: book.zip

      - name: Upload Changelog CSV
        uses: actions/upload-artifact@v4
        with:
          name: changelog-csv
          path: CHANGELOG.csv

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy L.I.S.A MDBook to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
