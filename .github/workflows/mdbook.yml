name: Deploy mdBook site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.36
      INSTALL_CLEAN: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install mdBook and plugins
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook
          cargo install mdbook-mermaid mdbook-toc mdbook-open-on-gh

      - name: Setup GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install custom theme for interactivity
        run: |
          mkdir -p theme
          if [[ "$INSTALL_CLEAN" == "true" || ! -f theme/custom.js ]]; then
            echo 'window.addEventListener("DOMContentLoaded", () => {
              document.querySelectorAll("table").forEach(table => {
                table.style.overflowX = "auto";
                table.style.display = "block";
              });
              const fab = document.createElement("button");
              fab.textContent = "â†‘";
              fab.style.position = "fixed";
              fab.style.bottom = "2rem";
              fab.style.right = "2rem";
              fab.style.padding = "1rem";
              fab.style.fontSize = "1.5rem";
              fab.style.borderRadius = "50%";
              fab.style.boxShadow = "0 4px 8px rgba(0,0,0,0.2)";
              fab.style.zIndex = "9999";
              fab.style.border = "none";
              fab.style.background = "#007acc";
              fab.style.color = "white";
              fab.style.cursor = "pointer";
              fab.style.transition = "opacity 0.3s ease-in-out";
              fab.title = "Scroll to Top";
              fab.addEventListener("click", () => window.scrollTo({top: 0, behavior: "smooth"}));
              document.body.appendChild(fab);
            });' > theme/custom.js
          fi
          if [[ "$INSTALL_CLEAN" == "true" || ! -f theme/custom.css ]]; then
            echo 'html { scroll-behavior: smooth; }
            nav { touch-action: pan-y; }
            button:hover { filter: brightness(1.2); }
            body { transition: background 0.3s ease-in-out, color 0.3s ease-in-out; }' > theme/custom.css
          fi
          if [[ "$INSTALL_CLEAN" == "true" || ! -f book.toml ]]; then
            echo "[book]" > book.toml
            echo "title = \"My Book\"" >> book.toml
            echo "[output.html]" >> book.toml
            echo "default-theme = \"light\"" >> book.toml
            echo "additional-js = [\"theme/custom.js\"]" >> book.toml
            echo "additional-css = [\"theme/custom.css\"]" >> book.toml
          fi

      - name: Build with mdBook and generate PDF
        run: |
          source $HOME/.cargo/env
          mdbook build
          sudo apt-get update && sudo apt-get install -y chromium-browser
          chromium-browser --headless --disable-gpu --print-to-pdf=book.pdf book/index.html
          cd book && zip -r ../book.zip . && cd ..

      - name: Generate changelog, summary, and README
        run: |
          git fetch --prune --unshallow || true
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          NEW_TAG="v$(date +'%Y.%m.%d.%H%M%S')"
          git log $LAST_TAG..HEAD --pretty=format:"%h,%an,%s,%cd" --date=short > CHANGELOG.csv
          echo "# Summary" > src/SUMMARY.md
          echo "- [Introduction](README.md)" >> src/SUMMARY.md
          echo "- [Changelog](changelog.md)" >> src/SUMMARY.md
          echo "| Commit | Author | Message | Date |" > src/changelog.md
          echo "|--------|--------|---------|------|" >> src/changelog.md
          cat CHANGELOG.csv | while IFS=',' read -r hash author subject date; do
            echo "| [$hash](https://github.com/${{ github.repository }}/commit/$hash) | $author | $subject | $date |" >> src/changelog.md
          done

          echo "" > src/README.md
          echo "# Project Documentation" >> src/README.md
          echo "" >> src/README.md
          echo "This is the autogenerated documentation site for **${{ github.repository }}**." >> src/README.md
          echo "" >> src/README.md
          echo "- ðŸ“˜ Built using **mdBook** ${MDBOOK_VERSION}" >> src/README.md
          echo "- ðŸ•’ Version: $NEW_TAG" >> src/README.md
          echo "- ðŸ”— View online: [GitHub Pages](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }})" >> src/README.md
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add src/changelog.md src/SUMMARY.md src/README.md CHANGELOG.csv theme/* book.toml
          git commit -m "chore: update changelog, summary, README, and interactivity theme"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          git push origin main

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book

      - name: Upload PDF version
        uses: actions/upload-artifact@v4
        with:
          name: book-pdf
          path: book.pdf

      - name: Upload ZIP version
        uses: actions/upload-artifact@v4
        with:
          name: book-zip
          path: book.zip

      - name: Upload Changelog CSV
        uses: actions/upload-artifact@v4
        with:
          name: changelog-csv
          path: CHANGELOG.csv

  # ðŸš€ Deployment Job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
